name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Example: Use a specific Node.js version that you know is supported
          always-auth: false
          check-latest: false
          token: ${{ secrets.GITHUB_TOKEN }}  # Or use your own token if necessary

      - name: Install dependencies
        run: npm install

      - name: Run tests with Jest and Babel
        run: |
          npm install --save-dev @babel/core @babel/preset-env babel-jest
          npx babel --version  # Check Babel version (optional)
          npx babel src --out-dir dist --presets=@babel/preset-env --copy-files
          npm test

      - name: Build Docker image
        run: docker build -t youtube-hossni:latest .

      - name: Set up OpenShift CLI
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          namespace: youtube-hossni
          auth_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Log in to OpenShift internal registry
        run: |
          oc whoami -t | docker login -u $(oc whoami) --password-stdin $(oc registry info)

      - name: Tag Docker image for OpenShift
        run: docker tag youtube-hossni:latest $(oc registry info)/youtube-hossni/youtube-hossni:latest

      - name: Push Docker image to OpenShift internal registry
        run: docker push $(oc registry info)/youtube-hossni/youtube-hossni:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.20.0'
          
      - name: Set up OpenShift CLI
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          namespace: youtube-hossni
          auth_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Deploy to OpenShift
        run: |
          oc apply -f k8s/deployment.yml -n youtube-hossni
          oc apply -f k8s/service.yml -n youtube-hossni
          oc apply -f k8s/route.yml -n youtube-hossni
          oc rollout restart deployment youtube-hossni
